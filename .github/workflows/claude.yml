name: Claude Code
# https://docs.anthropic.com/en/docs/claude-code/github-actions

on:
  issue_comment:
    types: [created]

jobs:
  claude:
    if: (github.event_name == 'issue_comment' && contains(github.event.comment.body, '@claude'))
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      issues: write
      id-token: write
    steps:
      - name: Fetch owner/repo of pull request
        uses: alessbell/pull-request-comment-branch@v2.1.0
        id: comment-branch
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # account for forked repos case
          ref: ${{ steps.comment-branch.outputs.head_ref }}
          repository: ${{ steps.comment-branch.outputs.head_owner }}/${{ steps.comment-branch.outputs.head_repo }}
          # Fetch more history for better git operations
          fetch-depth: 1
          persist-credentials: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Run Claude Code
        id: claude
        uses: anthropics/claude-code-action@v1
        with:
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
          prompt: |
            You MUST open a draft pull request after creating a branch.
            You MUST create a pull request after completing your task.
            You can create pull requests using the `mcp__github__create_pull_request` tool.
            Use `gh pr comment:*` for top-level comments.
            Only your GitHub comments that you post will be seen, so don't submit your review as a normal message, just as comments.
          claude_args: |
            --allowedTools "
              mcp__github__create_pull_request,
              Bash(pnpm install),
              Bash(pnpm test:*),
              Bash(pnpm fmt:sol),
              Bash(pnpm snapshot:*),
              Bash(pnpm compile:*),
              Bash(pnpm layout:*),
              Bash(cat *),
              Bash(find *),
              Bash(grep *),
              Bash(ls *),
              Bash(git remote remove fork-pr-*),
              Bash(gh pr comment:*), 
              Bash(gh pr diff:*), 
              Bash(gh pr view:*),
              WebFetch(domain:docs.anthropic.com)
            "
          use_sticky_comment: true
